# Don't change any field which is prefix with & and *
common:
  instance: &instance "clinico-omics"
  network: &network "clinico-omics-network"
  enable_ports: &enable_ports true
  http_port: &http_port 80  # No Change in Recommendation

  # FIXME: you can change these fields
  # NOTE: datains_workdir and tservice_workdir must be the subdirectory of minio_workdir and minio_workdir must exist on your server.
  datains_workdir: &datains_workdir "/data/minio/datains"
  tservice_workdir: &tservice_workdir "/data/minio/tservice"
  minio_workdir: &minio_workdir "/data/minio"

  # FIXME: You need to set introspec_endpoint & client_id & client_secret based on your keycloak configuration
  # NOTE: DONT USE localhost
  introspec_endpoint: &introspec_endpoint "http://xxxx/auth/realms/master/protocol/openid-connect/token/introspect"
  client_id: &client_id "clinico-omics"
  client_secret: &client_secret "c2472734-2fa9-4d85-b73b-45973624152d"
  email_password: &email_password "this_is_a_password"
  email_name: &email_name "ClinicoOmics Team"
  email_port: &email_port 465
  email_host: &email_host "smtp.163.com"
  email_account: &email_account "yjcyxky@163.com"
  email_enable_ssl: &email_enable_ssl true

  ## FIXME: You need to set mysql_password and mysql_root_password
  mysql_user: &mysql_user "keycloak"
  mysql_password: &mysql_password "keycloak-password"
  mysql_root_password: &mysql_root_password "keycloak-password"

  ## FIXME: You need to set postgres_password and datains_password
  postgres_password: &postgres_password "postgres-password"
  datains_password: &datains_password "postgres-password"

  ## FIXME: You need to set mongo_initdb_username and mongo_initdb_password
  mongo_initdb_username: &mongo_initdb_username "mongo-username"
  mongo_initdb_password: &mongo_initdb_password "mongo-password"

  # FIXME: you need to set cromwell_instance, cromwell_workflow_root and cromwell_token based on the setting of your cromwell server
  # NOTE: DONT USE localhost/127.0.0.1
  cromwell_instance: &cromwell_instance "http://xxxx:8000"
  cromwell_workflow_root: &cromwell_workflow_root "/mnt/cromwell-result"
  cromwell_token: &cromwell_token ""

image:
  # FIXME: you can change these field
  portal_image: &portal_image "registry.cn-shanghai.aliyuncs.com/clinico-omics/nginx-auth:1.15.8.2"
  tservice_image: &tservice_image "registry.cn-shanghai.aliyuncs.com/clinico-omics/tservice:v0.5.10-b882f753"
  datains_image: &datains_image "registry.cn-shanghai.aliyuncs.com/clinico-omics/datains:v0.4.2-950ba8f2"
  dataseq_core_image: &dataseq_core_image "registry.cn-shanghai.aliyuncs.com/clinico-omics/dataseq-core:v0.2.8-1df04ddb"

storage:
  # FIXME: You need to reset the minio_endpoint based on your ip address
  # NOTE: DONT USE localhost/127.0.0.1
  minio_endpoint: &minio_endpoint "http://xxxx:9000"
  # FIXME: you need to set minio_access_key and minio_secret_key
  # NOTE: minio_access_key is similar with username and minio_secret_key is similar with password
  minio_access_key: &minio_access_key "clinico-omics"
  minio_secret_key: &minio_secret_key "clinico-omics-password"
  minio_whitelist: &minio_whitelist ["tservice", "datains"]
  minio_blacklist: &minio_blacklist []

  # OSS
  enable_oss: &enable_oss false
  oss_endpoint: &oss_endpoint "http://oss-cn-shanghai.aliyuncs.com"
  oss_access_key: &oss_access_key "oss_access_key"
  oss_secret_key: &oss_secret_key "oss_secret_key"
  oss_whitelist: &oss_whitelist ["tservice", "datains"]
  oss_blacklist: &oss_blacklist []

  default_fs_service: &default_fs_service "minio"

# ******************************************************************************
# ***                    Don't change the following lines.                    **          
# ******************************************************************************
services:
  database:
    docker-compose.yml:
      # Common
      instance: *instance
      network: *network
      enable_ports: *enable_ports
      # MySQL
      mysql_image: "registry.cn-shanghai.aliyuncs.com/clinico-omics/mysql:5.7.32"
      mysql_database: "keycloak"
      mysql_user: *mysql_user
      mysql_password: *mysql_password
      mysql_root_password: *mysql_root_password
      # PostgreSQL
      postgres_image: "registry.cn-shanghai.aliyuncs.com/clinico-omics/postgres"
      postgres_password: *postgres_password
      datains_password: *datains_password
      # MongoDB
      mongodb_image: "registry.cn-shanghai.aliyuncs.com/clinico-omics/mongo:4.0.5"
      mongo_initdb_root_username: *mongo_initdb_username
      mongo_initdb_root_password: *mongo_initdb_password
      mongo_initdb_database: "dataseq-core"
      mongo_initdb_username: *mongo_initdb_username
      mongo_initdb_password: *mongo_initdb_password

  auth:
    docker-compose.yml:
      instance: *instance
      network: *network
      enable_ports: *enable_ports
      # Portal
      portal_image: *portal_image
      username: ""  # Don't need to set when auth_mode is JWT
      password: ""  # Don't need to set when auth_mode is JWT
      auth_mode: "JWT"  # JWT, PASSWORD
      introspec_endpoint: *introspec_endpoint
      client_id: *client_id
      client_secret: *client_secret
      http_port: *http_port
      workdir: *minio_workdir  # Where do you want to storage all data from clinico-omics system?
      # Keycloak
      keycloak_image: "registry.cn-shanghai.aliyuncs.com/clinico-omics/keycloak:15.0.1"
      keycloak_user: "keycloak"
      keycloak_password: *mysql_password
      db_vendor: "mysql"
      db_addr: "mysql"  # In docker bridge network
      db_user: *mysql_user
      db_password: *mysql_password
      jdbc_params: "useSSL=false"

    config/realm-export.json:
      client_secret: *client_secret
      email_password: *email_password
      email_name: *email_name
      email_port: *email_port
      email_host: *email_host
      email_account: *email_account
      email_enable_ssl: *email_enable_ssl

  clinico-omics:
    docker-compose.yml:
      instance: *instance
      network: *network
      enable_ports: *enable_ports
      # Dataseq Core
      dataseq_core_image: *dataseq_core_image
      # Tservice
      tservice_image: *tservice_image
      tservice_workdir: *tservice_workdir
      # Datains
      datains_image: *datains_image
      datains_workdir: *datains_workdir
      # Minio
      ## Please install minio-keygen, https://github.com/iwittkau/minio-keygen
      minio_image: "registry.cn-shanghai.aliyuncs.com/clinico-omics/minio"
      minio_workdir: *minio_workdir
      minio_access_key: *minio_access_key
      minio_secret_key: *minio_secret_key

    conf/datains-conf.edn:
      # Database
      datains_db_user: "datains"
      datains_db_password: *datains_password
      datains_workdir: *datains_workdir
      # App Store
      app_store_access_token: ""
      app_store_host: ""
      app_store_port: 80
      app_store_username: ""
      app_store_password: ""
      # Minio
      minio_endpoint: *minio_endpoint
      minio_access_key: *minio_access_key
      minio_secret_key: *minio_secret_key
      minio_workdir: *minio_workdir
      minio_whitelist: *minio_whitelist
      minio_blacklist: *minio_blacklist
      # OSS
      enable_oss: *enable_oss
      oss_endpoint: *oss_endpoint
      oss_access_key: *oss_access_key
      oss_secret_key: *oss_secret_key
      oss_whitelist: *oss_whitelist
      oss_blacklist: *oss_blacklist
      default_fs_service: *default_fs_service
      # Cromwell
      cromwell_instance: *cromwell_instance
      cromwell_workflow_root: *cromwell_workflow_root
      cromwell_token: *cromwell_token
      # Email
      email_password: *email_password
      email_name: *email_name
      email_port: *email_port
      email_host: *email_host
      email_account: *email_account
      email_enable_ssl: *email_enable_ssl

    conf/dataseq-core-conf.edn:
      mongodb_username: *mongo_initdb_username
      mongodb_password: *mongo_initdb_password

    conf/tservice-conf.edn:
      # Database
      tservice_db_user: "tservice"
      tservice_db_password: *datains_password
      tservice_workdir: *tservice_workdir
      tservice_plugin_path: "/tservice-plugins"
      # Minio
      minio_workdir: *minio_workdir
      minio_endpoint: *minio_endpoint
      minio_access_key: *minio_access_key
      minio_secret_key: *minio_secret_key
      # OSS
      enable_oss: *enable_oss
      oss_endpoint: *oss_endpoint
      oss_access_key: *oss_access_key
      oss_secret_key: *oss_secret_key
      default_fs_service: *default_fs_service
